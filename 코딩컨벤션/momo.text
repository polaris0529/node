https://github.com/naver/eslint-config-naver/blob/master/STYLE_GUIDE.md  js코딩_컨벤션 
https://github.com/choegyumin/markup-coding-conventions  마크업 코딩_컨벤션 
https://geonlee.tistory.com/96  시멘틱 HTML
https://www.w3schools.com/tags/default.asp  HTML Element Reference 

시맨틱(semantic) HTML?

1) syntax 
2개의 공백 문자(소프트탭)을 사용하세요.
케밥식(kebab case) ex ) class= "rocket launch duration"
모든 애트리뷰트 값은 큰 따옴표(")로 감싸세요.
닫는 태그가 선택적이라도 생략하지 마세요. (ex: </li>, </body>)

1-2. Doctype
Doctype은 HTML5 DTD(Document Type Definition, DTD)로 선언하세요. 
이어서 자기 마침 태그(Self-Closing Tags)에 후행 슬래시(/)를 사용하지 마세요. ex <input/> => <input>

1-3. Metadata
<head> 엘리먼트의 자식 엘리먼트는 아래의 순서대로 작성하세요.
Charset
X-UA-Compatible
Viewport
Title
Meta
Style
JavaScript

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=Edge"> IE최신번전 렌더링을 위한 Edge선언 

1-4
A. <body> 래퍼 엘리먼트
필요에 따라 본문을 숨겨야 하거나, 본문 위에 다른 레이어 엘리먼트가 겹칠 수도 있습니다. 본문의 화면 조작을 위해 본문을 래퍼 엘리먼트에 작성하세요.
ex ) <body><div class="app"></div></body>

B. 스타일 제어가 어려운 엘리먼트
자식 엘리먼트 태그가 한정적이거나(ex. <table>) 스타일 제어에 한계를 가진 엘리먼트(ex. <select>)가 컴포넌트의 루트 역할로 쓰일 땐 나중에 발생할 유지보수를 고려해 <div>나 <span> 엘리먼트로 감싸는 것을 권장합니다.

C. 엘리먼트의 뷰를 숨길 때는 새로운 엘리먼트로 감싸서 숨기세요. <caption>을 바로 숨긴다면 브라우저에 따라 스타일이 깨질 수도 있습니다. 
<caption> 
<table>
  <caption>
    <div class="blind">My Caption</div>
  </caption>
</table>

<aria-label>
1-1. aria-label은 모든 html 태그에서 사용할 수 있다.
1-2. 이미지를 사용해 시각적 표현을 할 경우 대체 텍스트 역할을 한다.
    일반적인 텍스트를 사용해서 영역을 표현하는 경우가 아닌
    이미지를 통해 영역을 표현하는 경우 해당 영역이 어떤 영역인지 설명할 수 있는 요소가 있어야한다.
    그런 설명하는 역할을 하는 속성이 바로 aria-label 속성이다.

<aria-labelledby>
aria-labelledby는 맨 처음 aria-label을 설명하기 전에 설명했듯이
화면에 현재 요소를 설명할 텍스트가 있을 경우에 해당 텍스트 영역과 현재 요소를 연결할 때 사용한다.


C. 테이블 제목
<caption> 엘리먼트의 뷰를 숨길 때는 새로운 엘리먼트로 감싸서 숨기세요. <caption>을 바로 숨긴다면 브라우저에 따라 스타일이 깨질 수도 있습니다.
<table>
  <caption>
    <div class="blind">My Caption</div>
  </caption>
</table>

<!-- Good -->
<h4 id="_my-caption">My Caption</h4>
<table aria-labelledby="_my-caption"></table>

D. 입력 필드
회원가입 폼의 입력 필드처럼 너비, 높이가 유동적이라면 인라인 스타일로 제어하세요. 이렇게 하면 불필요한 클래스 생성을 막을 수 있습니다.
<input type="text" class="input" style="width:120px">
<input type="text" class="input" style="width:180px">

1-5. Attributes
애트리뷰트는 변하지 않는 것부터 먼저 선언하세요. 애트리뷰트의 순서가 비슷한 엘리먼트끼리 통일되므로 검색하기 편해집니다.
<input class="input" type="text" id="user-id" name="UserId" title="아이디" style="width:100px">
<input class="input" type="password" id="user-pw" name="UserPw" title="비밀번호" style="width:120px">

A. Boolean 애트리뷰트
HTML5에서는 Boolean 애트리뷰트를 선언하는 것 만으로도 true 값을 가집니다. 필요하지 않다면 값을 작성하지 마세요.
<!-- Good -->
<button disabled></button>

B. name 애트리뷰트
name 애트리뷰트 값은 비즈니스 로직을 작성하는 언어의 네이밍 규칙에 맞게 작성하는 것을 권장합니다.
<!-- PascalCase -->
<form class="form" id="my-form" name="MyForm">
  <input class="input" type="text" id="my-user-name" name="MyUserName">
</form>

1-6. Import
HTML5에서 CSS와 JS 파일을 불러올 때 type 애트리뷰트는 이미 기본값을 가집니다. 필요하지 않다면 선언하지 마세요.
<script> 엘리먼트는 가급적 <head> 또는 <body> 엘리먼트의 가장 마지막에 작성하세요. 웹브라우저는 <script> 엘리먼트를 만나면 처리가 끝날 때까지 HTML 파싱을 멈춥니다.

Tags
<header>
<main> only one

정의 및 특징
<nav> 태그는 다른 페이지 또는 현재 페이지의 다른 부분과 연결되는 네비게이션 링크(navigation links)들의 집합을 정의할 때 사용합니다.
default nav { display : block }













